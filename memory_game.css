/* Base theme variables (from styles.css, simplified for minigames) */
:root {
    --bg-color: #f0f0f0;
    --text-color: #333;
    --container-bg: #fff;
    --border-color: #ddd;
    --header-bg: #f8f8f8;
    --instructions-bg: #e9e9e9;
    --grid-bg: #eee;
    --grid-block-border: rgba(0, 0, 0, 0.1);
    --selected-block-border: #007bff;
    --placeholder-block-bg: #e0e0e0;
    --link-color: #007bff;
    --tooltip-bg: rgba(0, 0, 0, 0.75);
    --tooltip-text: white;
    --body-bg-image: none;
    --body-bg-repeat: no-repeat;
    --body-bg-size: auto;
    --body-bg-position: center;
    --body-image-rendering: auto;
}

body {
    font-family: Arial, sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 20px;
    background-color: var(--bg-color);
    color: var(--text-color);
    transition: background-color 0.3s ease, color 0.3s ease;
    background-image: var(--body-bg-image);
    background-repeat: var(--body-bg-repeat);
    background-size: var(--body-bg-size);
    background-position: center center;
    image-rendering: var(--body-image-rendering);
}

h1, h2, h3 {
    color: var(--text-color);
}

.game-container {
    display: flex;
    flex-direction: column;
    gap: 20px;
    background-color: var(--container-bg);
    padding: 25px;
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    transition: background-color 0.3s ease, border-color 0.3s ease;
    align-items: center;
}

/* Instructions removed as requested */
/*
.instructions {
    background-color: var(--instructions-bg);
    padding: 15px;
    border-radius: 5px;
    border-left: 5px solid var(--link-color);
    transition: background-color 0.3s ease, border-color 0.3s ease;
    width: 100%;
    box-sizing: border-box;
}

.instructions ul {
    margin-left: 20px;
}
*/

.main-game-layout {
    display: flex;
    flex-direction: row; /* Inventory and grid side-by-side */
    gap: 20px; /* Space between inventory and grid */
    align-items: flex-start; /* Align items to the top */
    width: 100%; /* Take full width of parent */
    justify-content: center; /* Center the whole block */
    flex-wrap: wrap; /* Allow wrapping on smaller screens */
}

.left-panel {
    display: flex;
    flex-direction: column;
    align-items: center; /* Center inventory items horizontally */
    gap: 20px;
    min-width: 200px; /* Ensure inventory has enough space */
}


.inventory {
    width: 100%;
}

.inventory-category {
    margin-bottom: 15px;
    border: 1px solid var(--border-color);
    border-radius: 5px;
    overflow: hidden;
    transition: border-color 0.3s ease;
}

.category-header {
    background-color: var(--header-bg);
    padding: 10px 15px;
    cursor: pointer;
    font-size: 1.1em;
    color: var(--text-color);
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid var(--border-color);
    transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease;
}

.category-header:hover {
    background-color: var(--instructions-bg);
}

.toggle-icon {
    font-size: 0.8em;
    transition: transform 0.2s ease;
}

.category-content {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    padding: 10px;
    background-color: var(--container-bg);
    max-height: 500px;
    transition: max-height 0.3s ease-out, padding 0.3s ease-out, background-color 0.3s ease;
    overflow: hidden;
    justify-content: center;
}

.block-items {
    gap: 0;
    margin-top: 10px;
    flex-direction: column;
}

.inventory-block {
    width: 70px; /* Increased size */
    height: 70px; /* Increased size */
    border: 2px solid var(--border-color);
    border-radius: 4px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 12px;
    text-align: center;
    line-height: 1.2;
    box-sizing: border-box;
    position: relative;
    overflow: hidden;

    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    color: transparent;

    image-rendering: pixelated;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.inventory-block.selected {
    border-color: var(--selected-block-border);
    box-shadow: 0 0 0 3px var(--selected-block-border);
}

.inventory-block::after {
    content: attr(data-name);
    position: absolute;
    bottom: -50px;
    left: 0;
    right: 0;
    font-size: 10px;
    color: var(--tooltip-text);
    background-color: var(--tooltip-bg);
    padding: 2px 0;
    pointer-events: none;
    transition: bottom 0.2s ease-out, background-color 0.3s ease, color 0.3s ease;
}

.inventory-block:hover::after {
    bottom: 0;
}

.inventory-block[data-name="Air"] {
    background-color: var(--placeholder-block-bg);
    color: var(--text-color);
    border: 1px dashed var(--border-color);
    transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease;
}

.game-grid {
    display: grid;
    /* Grid size defined in JS for minigame */
    border: 2px solid var(--text-color);
    background-color: var(--grid-bg);
    margin: 0; /* Remove auto margins to fit flex layout */
    user-select: none;
    image-rendering: pixelated;
    transition: background-color 0.3s ease, border-color 0.3s ease;
}

.grid-block {
    /* Block size defined in JS for minigame */
    border: 1px solid var(--grid-block-border);
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 0.8em;
    color: transparent;
    cursor: pointer;
    transition: background-image 0.1s ease, background-color 0.3s ease, border-color 0.3s ease;
    text-shadow: none;

    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;

    image-rendering: pixelated;
}

.grid-block[data-type="Air"] {
    background-color: var(--placeholder-block-bg);
    background-image: none;
}

.grid-block:hover {
    filter: brightness(1.1);
}

/* Specific styling for "ghost blocks" (visible during memorize phase) */
.grid-block.ghost-block {
    opacity: 0.5; /* Makes them transparent */
    border: 1px dashed var(--selected-block-border); /* Dashed border for ghost effect */
    background-color: var(--placeholder-block-bg); /* Still show base 'Air' color */
}

/* Styling for hidden blocks (during recreate phase) */
.grid-block.hidden-block {
    background-image: none !important; /* Force no background image */
    background-color: var(--placeholder-block-bg) !important; /* Force air background */
    opacity: 1 !important; /* Ensure full opacity for empty spots */
    border: 1px solid var(--grid-block-border); /* Standard border */
}


.block-tooltip {
    position: absolute;
    background-color: var(--tooltip-bg);
    color: var(--tooltip-text);
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 0.9em;
    pointer-events: none;
    z-index: 1000;
    opacity: 0;
    transition: opacity 0.2s ease-in-out, background-color 0.3s ease, color 0.3s ease;
}

.selected-block-area {
    display: flex;
    flex-direction: column; /* Stack header and visual vertically */
    align-items: center; /* Center content */
    gap: 10px;
    margin-bottom: 0; /* Adjust margin for new layout */
    width: 100%; /* Take full width of left-panel */
}

.selected-block-area h3 {
    margin: 0;
    font-size: 1.1em;
    color: var(--text-color);
}

.selected-block-visual {
    width: 70px; /* Increased size */
    height: 70px; /* Increased size */
    border: 2px solid var(--selected-block-border);
    border-radius: 4px;
    background-color: var(--placeholder-block-bg);
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    image-rendering: pixelated;
    box-sizing: border-box;
    position: relative;
    overflow: hidden;
    transition: border-color 0.3s ease, background-color 0.3s ease;
}

.selected-block-visual::after {
    content: attr(data-type);
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    font-size: 10px;
    color: var(--tooltip-text);
    background-color: var(--tooltip-bg);
    padding: 2px 0;
    text-align: center;
    pointer-events: none;
    transition: background-color 0.3s ease, color 0.3s ease;
}

/* Base styles for action buttons - button.png applied here */
.action-button {
    border: none;
    cursor: pointer;
    margin-top: 10px;
    transition: background-color 0.2s ease, filter 0.2s ease, transform 0.2s ease, box-shadow 0.2s ease;
    align-self: center;
    width: 400px; /* Changed to 400px */
    height: 40px;
    image-rendering: pixelated;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    background-image: url('textures/button.png');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-color: var(--bg-color);
    color: white;
    text-decoration: none;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1em;
}

.action-button:disabled {
    cursor: not-allowed;
    filter: none;
    transform: none;
    box-shadow: none;
    background-image: url('textures/button_disabled.png');
    background-color: var(--bg-color);
    color: white;
}

.action-button:hover:not(:disabled) {
    background-image: url('textures/button_highlighted.png');
    background-color: var(--bg-color);
    filter: brightness(1.1);
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

.action-button:active:not(:disabled) {
    filter: brightness(0.9);
    transform: translateY(0);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.top-buttons-container,
.utility-buttons-container { /* Applied to both button containers */
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
    justify-content: center;
    flex-wrap: wrap;
    width: 100%;
}

.minigame-header {
    display: flex;
    justify-content: space-around;
    align-items: center;
    width: 100%;
    margin-bottom: 20px;
    background-color: var(--header-bg);
    padding: 10px 15px;
    border-radius: 5px;
    border: 1px solid var(--border-color);
}

.status-display, .countdown-display, .level-display, .score-display {
    font-size: 1.5em;
    font-weight: bold;
    color: var(--text-color);
    text-align: center;
    min-width: 120px;
}

/* Adjustments for responsiveness */
@media (max-width: 900px) { /* Adjust breakpoint as needed */
    .main-game-layout {
        flex-direction: column; /* Stack inventory and grid vertically */
        align-items: center; /* Center items when stacked */
    }

    .game-container {
        padding: 15px;
        width: 95%;
    }

    .inventory-block {
        width: 60px;
        height: 60px;
    }

    .selected-block-visual {
        width: 60px;
        height: 60px;
    }

    .action-button {
        width: 100%; /* Full width buttons on smaller screens */
    }

    .minigame-header {
        flex-direction: column;
        gap: 10px;
    }

    .status-display, .countdown-display, .level-display, .score-display {
        font-size: 1.2em;
        min-width: unset;
    }
}

@media (max-width: 480px) {
    .game-grid {
        /* Further adjustments might be needed in JS for BLOCK_SIZE on very small screens */
        transform: scale(0.8);
        transform-origin: center top;
    }
}
