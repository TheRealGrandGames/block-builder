/* Base theme variables (copied from styles.css, simplified for minigames) */
:root {
    --bg-color: #f0f0f0;
    --text-color: #333;
    --container-bg: #fff;
    --border-color: #ddd;
    --header-bg: #f8f8f8;
    --instructions-bg: #e9e9e9;
    --grid-bg: #eee;
    --grid-block-border: rgba(0, 0, 0, 0.1);
    --selected-block-border: #007bff;
    --placeholder-block-bg: #e0e0e0;
    --link-color: #007bff;
    --tooltip-bg: rgba(0, 0, 0, 0.75);
    --tooltip-text: white;
    --body-bg-image: none;
    --body-bg-repeat: no-repeat;
    --body-bg-size: auto;
    --body-bg-position: center;
    --body-image-rendering: auto;
}

body {
    font-family: Arial, sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 20px;
    background-color: var(--bg-color);
    color: var(--text-color);
    transition: background-color 0.3s ease, color 0.3s ease;
    background-image: var(--body-bg-image);
    background-repeat: var(--body-bg-repeat);
    background-size: var(--body-bg-size);
    background-position: center center;
    image-rendering: var(--body-image-rendering);
}

h1, h2, h3 {
    color: var(--text-color);
}

.game-container {
    display: flex;
    flex-direction: column;
    gap: 20px;
    background-color: var(--container-bg);
    padding: 25px;
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    transition: background-color 0.3s ease, border-color 0.3s ease;
    align-items: center; /* Center content within container */
}

.puzzle-info {
    background-color: var(--instructions-bg);
    padding: 15px;
    border-radius: 5px;
    border-left: 5px solid var(--link-color);
    transition: background-color 0.3s ease, border-color 0.3s ease;
    width: 100%;
    box-sizing: border-box;
}

.puzzle-info h2 {
    margin-top: 0;
    margin-bottom: 10px;
}

.rules-text {
    font-size: 1.1em;
    line-height: 1.5;
}

.main-game-layout {
    display: flex;
    flex-direction: row; /* Inventory and grid side-by-side */
    gap: 20px; /* Space between inventory and grid */
    align-items: flex-start; /* Align items to the top */
    width: 100%; /* Take full width of parent */
    justify-content: center; /* Center the whole block */
    flex-wrap: wrap; /* Allow wrapping on smaller screens */
}

.left-panel {
    display: flex;
    flex-direction: column;
    align-items: center; /* Center inventory items horizontally */
    gap: 20px;
    min-width: 200px; /* Ensure inventory has enough space */
}

.inventory {
    width: 100%; /* Take full width of left-panel */
}

/* IMPORTANT: Styles moved to #blockInventoryInner.block-items */
#blockInventoryInner.block-items { /* Target the inner div with this ID and class */
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-top: 10px;
    justify-content: center;
    padding: 10px;
    background-color: var(--container-bg);
    border-radius: 5px;
    border: 1px solid var(--border-color);
}

.inventory-block {
    width: 70px;
    height: 70px;
    border: 2px solid var(--border-color);
    border-radius: 4px;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 12px;
    text-align: center;
    line-height: 1.2;
    box-sizing: border-box;
    position: relative;
    overflow: hidden;

    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    color: transparent;

    image-rendering: pixelated;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.inventory-block .inventory-block-count {
    position: absolute;
    bottom: 0;
    right: 0;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    font-size: 0.9em;
    padding: 2px 5px;
    border-top-left-radius: 4px;
    line-height: 1;
    z-index: 1;
}


.inventory-block.selected {
    border-color: var(--selected-block-border);
    box-shadow: 0 0 0 3px var(--selected-block-border);
}

.inventory-block::after {
    content: attr(data-name);
    position: absolute;
    bottom: -50px;
    left: 0;
    right: 0;
    font-size: 10px;
    color: var(--tooltip-text);
    background-color: var(--tooltip-bg);
    padding: 2px 0;
    pointer-events: none;
    transition: bottom 0.2s ease-out, background-color 0.3s ease, color 0.3s ease;
}

.inventory-block:hover::after {
    bottom: 0;
}

.inventory-block[data-name="Air"] {
    background-color: var(--placeholder-block-bg);
    color: var(--text-color);
    border: 1px dashed var(--border-color);
    transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease;
}

.game-grid {
    display: grid;
    /* Grid size defined in JS for minigame */
    border: 2px solid var(--text-color);
    background-color: var(--grid-bg);
    margin: 0;
    user-select: none;
    image-rendering: pixelated;
    transition: background-color 0.3s ease, border-color 0.3s ease;
}

.grid-block {
    /* Block size defined in JS for minigame */
    border: 1px solid var(--grid-block-border);
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 0.8em;
    color: transparent;
    cursor: pointer;
    transition: background-image 0.1s ease, background-color 0.3s ease, border-color 0.3s ease;
    text-shadow: none;

    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;

    image-rendering: pixelated;
}

.grid-block[data-type="Air"] {
    background-color: var(--placeholder-block-bg);
    background-image: none;
}

.grid-block:hover {
    filter: brightness(1.1);
}

/* Specific styling for fixed blocks in puzzles */
.grid-block.fixed-block {
    cursor: not-allowed;
    opacity: 1;
    border: 1px solid #777;
    box-shadow: inset 0 0 0 2px #555;
    filter: brightness(0.9);
}


.block-tooltip {
    position: absolute;
    background-color: var(--tooltip-bg);
    color: var(--tooltip-text);
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 0.9em;
    pointer-events: none;
    z-index: 1000;
    opacity: 0;
    transition: opacity 0.2s ease-in-out, background-color 0.3s ease, color 0.3s ease;
}

.selected-block-area {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
    margin-bottom: 0;
    width: 100%;
}

.selected-block-area h3 {
    margin: 0;
    font-size: 1.1em;
    color: var(--text-color);
}

.selected-block-visual {
    width: 70px;
    height: 70px;
    border: 2px solid var(--selected-block-border);
    border-radius: 4px;
    background-color: var(--placeholder-block-bg);
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    image-rendering: pixelated;
    box-sizing: border-box;
    position: relative;
    overflow: hidden;
    transition: border-color 0.3s ease, background-color 0.3s ease;
}

.selected-block-visual::after {
    content: attr(data-type);
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    font-size: 10px;
    color: var(--tooltip-text);
    background-color: var(--tooltip-bg);
    padding: 2px 0;
    text-align: center;
    pointer-events: none;
    transition: background-color 0.3s ease, color 0.3s ease;
}

/* Base styles for action buttons - button.png applied here */
.action-button {
    border: none;
    cursor: pointer;
    margin-top: 10px;
    transition: background-color 0.2s ease, filter 0.2s ease, transform 0.2s ease, box-shadow 0.2s ease;
    align-self: center;
    width: 400px;
    height: 40px;
    image-rendering: pixelated;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    background-image: url('textures/button.png');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-color: var(--bg-color);
    color: white;
    text-decoration: none;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1em;
}

.action-button:disabled {
    cursor: not-allowed;
    filter: none;
    transform: none;
    box-shadow: none;
    background-image: url('textures/button_disabled.png');
    background-color: var(--bg-color);
    color: white;
}

.action-button:hover:not(:disabled) {
    background-image: url('textures/button_highlighted.png');
    background-color: var(--bg-color);
    filter: brightness(1.1);
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

.action-button:active:not(:disabled) {
    filter: brightness(0.9);
    transform: translateY(0);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.top-buttons-container,
.utility-buttons-container {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
    justify-content: center;
    flex-wrap: wrap;
    width: 100%;
}

.minigame-header {
    display: flex;
    justify-content: space-around;
    align-items: center;
    width: 100%;
    margin-bottom: 20px;
    background-color: var(--header-bg);
    padding: 10px 15px;
    border-radius: 5px;
    border: 1px solid var(--border-color);
}

.puzzle-title, .score-display {
    font-size: 1.5em;
    font-weight: bold;
    color: var(--text-color);
    text-align: center;
    min-width: 120px;
}

.message-display {
    font-size: 1.2em;
    font-style: italic;
    flex-grow: 1;
    text-align: center;
    margin-top: 15px;
    color: var(--text-color);
    min-height: 1.5em;
}


/* Adjustments for responsiveness */
@media (max-width: 900px) {
    .main-game-layout {
        flex-direction: column;
        align-items: center;
    }

    .game-container {
        padding: 15px;
        width: 95%;
    }

    .inventory-block {
        width: 60px;
        height: 60px;
    }

    .selected-block-visual {
        width: 60px;
        height: 60px;
    }

    .action-button {
        width: 100%;
    }

    .minigame-header {
        flex-direction: column;
        gap: 10px;
    }

    .puzzle-title, .score-display {
        font-size: 1.2em;
        min-width: unset;
    }
}

@media (max-width: 480px) {
    .game-grid {
        transform: scale(0.8);
        transform-origin: center top;
    }
}
